services:
  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: redis_cache
    restart: always
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: ./django_backend
    container_name: web
    restart: always
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      celery:
        condition: service_started
    ports:
      - "8000:8000"
    volumes:
      - ./django_backend:/app
    command: ["sh", "-c", "sed -i 's/\\r$//' /app/scripts/entrypoint.sh && sh /app/scripts/entrypoint.sh"]
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8000/health/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  celery:
    build: ./django_backend
    container_name: celery_worker
    restart: always
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./django_backend:/app
    command: ["sh", "-c", "celery -A config worker --loglevel=info"]

  celery-beat:
    build: ./django_backend
    container_name: celery_beat
    restart: always
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      celery:
        condition: service_started
    volumes:
      - ./django_backend:/app
    command: ["sh", "-c", "celery -A config beat --loglevel=info"]

volumes:
  postgres_data:
  redis_data: